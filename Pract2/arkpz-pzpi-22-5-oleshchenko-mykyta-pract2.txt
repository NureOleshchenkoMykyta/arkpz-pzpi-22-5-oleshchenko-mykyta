МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ 

ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ 

 

  

    

Практична робота №2 

з дисципліні “Аналіз та рефакторинг коду” 

 

 

 

 

 

 

 

Виконав  

ст. гр. ПЗПІ-22-5  

 

Олещенко Микита  

Перевірив  

ст. викл. 

 

 

Сокорчук І. П. 

 

 

 

ХАРКІВ 2024 

 

 

 

 

Практична робота №2 

  

Мета роботи: навчитися основним методам рефакторингу коду на основі реальних прикладів з власних програмних проєктів, навчитися ідентифікувати проблеми в коді та використовувати відповідні методи рефакторингу для покращення його якості. 

 

      

Хід роботи 

     1. Було створено презентацію на тему «Методи рефакторингу коду програмного забезпечення» (див. додаток А). 

      

 

Висновок: під час практичної роботи я навчився основним методам рефакторингу коду, навчився ідентифікувати проблеми в коді та використовувати відповідні методи рефакторингу для покращення його якості. 

     Посилання на захист презентації: https://youtu.be/fEupQiXEr_4 

     Посилання на GitHub: https://github.com/NureOleshchenkoMykyta/arkpz-pzpi-22-5-oleshchenko-mykyta. 

  

  

 

 

 

 

 

 

 

     ДОДАТОК А 

Слайди презентації: 

Рисунок 1 – Титульний слайд 

Рисунок 2 – Зміст презентації 

 

Рисунок 3 – Введення до рефакторингу 

 

Рисунок 4 – Метод ”Extract Method” 

Рисунок 5 – Переваги методу ”Extract Method” 

 

Рисунок 6 – Приклади використання методу ”Extract Method” 

Рисунок 7 – Метод ”Rename Variable” 

Рисунок 8 – Переваги методу ”Rename Variable” 

Рисунок 9 – Приклад використання методу ”Rename Variable” 

Рисунок 10 – Метод ”Simplify Conditional Expressions” 

Рисунок 11 – Переваги методу ”Simplify Conditional Expressions” 

Рисунок 12 – Приклади використання методу ”Simplify Conditional Expressions” 

Рисунок 13 – Інструменти для рефакторингу коду 

Рисунок 14 – Visual Studio Code 

Рисунок 15 – IntelliJ IDEA 

Рисунок 16 – Rust Analyzer 

Рисунок 17 – RustFMT 

Рисунок 18 – Висновки 

Рисунок 19 – Джерела інформації 
